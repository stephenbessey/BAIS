# ============================================================================
# BAIS Platform - Filebeat Configuration
# Best practices: Clear Log Collection, Efficient Processing
# ============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: logging
  labels:
    app: filebeat
    component: logging
data:
  filebeat.yml: |
    filebeat.inputs:
    # Container logs from Kubernetes
    - type: container
      paths:
        - /var/log/containers/*bais-api*.log
        - /var/log/containers/*postgres*.log
        - /var/log/containers/*redis*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
              resource_type: "pod"
          - logs_path:
              logs_path: "/var/log/containers/"
              resource_type: "container"
          default_indexers:
          - ip_port:
          default_matchers:
          - fields:
              lookup_fields: ["kubernetes.pod.name", "kubernetes.namespace"]
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # System logs
    - type: log
      paths:
        - /var/log/messages
        - /var/log/syslog
        - /var/log/auth.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
            log_type: system
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # Application logs from mounted volumes
    - type: log
      paths:
        - /var/log/app/*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
            log_type: application
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # Performance logs
    - type: log
      paths:
        - /var/log/performance/*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
            log_type: performance
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # Security logs
    - type: log
      paths:
        - /var/log/security/*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
            log_type: security
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # Audit logs
    - type: log
      paths:
        - /var/log/audit/*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
      - add_fields:
          target: environment
          fields:
            cluster: bais-production
            environment: production
            log_type: audit
      - drop_fields:
          fields: ["agent", "ecs", "input", "log"]
    
    # Output to Logstash
    output.logstash:
      hosts: ["logstash:5044"]
      worker: 2
      compression_level: 3
      bulk_max_size: 2048
      timeout: 30s
    
    # Monitoring
    monitoring.enabled: true
    monitoring.elasticsearch:
      hosts: ["elasticsearch:9200"]
    
    # Logging
    logging.level: info
    logging.to_files: true
    logging.files:
      path: /var/log/filebeat
      name: filebeat
      keepfiles: 7
      permissions: 0644
      rotateeverybytes: 10485760
      rotateonstartup: true
    
    # Processors
    processors:
    - add_host_metadata:
        when.not.contains.tags: forwarded
    - add_docker_metadata: ~
    - add_kubernetes_metadata: ~
    - drop_fields:
        fields: ["agent", "ecs", "input", "log"]
    
    # Setup
    setup.kibana:
      host: "kibana:5601"
    
    setup.template.settings:
      index.number_of_shards: 1
      index.number_of_replicas: 1
      index.refresh_interval: 5s
      index.codec: best_compression
    
    setup.template.name: "bais-logs"
    setup.template.pattern: "bais-logs-*"
    
    setup.ilm.enabled: true
    setup.ilm.rollover_alias: "bais-logs"
    setup.ilm.pattern: "{now/d}-000001"
    setup.ilm.policy: |
      {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_age": "1d",
                  "max_size": "50GB"
                }
              }
            },
            "warm": {
              "min_age": "2d",
              "actions": {
                "allocate": {
                  "number_of_replicas": 0
                }
              }
            },
            "cold": {
              "min_age": "7d",
              "actions": {
                "allocate": {
                  "number_of_replicas": 0
                }
              }
            },
            "delete": {
              "min_age": "30d"
            }
          }
        }
      }

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: logging
  labels:
    app: filebeat
    component: logging
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
        component: logging
    spec:
      securityContext:
        runAsUser: 0  # Required for accessing host logs
        runAsGroup: 0
        fsGroup: 0
      serviceAccountName: filebeat
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.10.0
        args:
        - -c
        - /etc/filebeat.yml
        - -e
        - -strict.perms=false
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlogapp
          mountPath: /var/log/app
          readOnly: true
        - name: varlogperformance
          mountPath: /var/log/performance
          readOnly: true
        - name: varlogsecurity
          mountPath: /var/log/security
          readOnly: true
        - name: varlogaudit
          mountPath: /var/log/audit
          readOnly: true
        - name: varlogfilebeat
          mountPath: /var/log/filebeat
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          runAsNonRoot: false
          privileged: true
          allowPrivilegeEscalation: true
      volumes:
      - name: config
        configMap:
          name: filebeat-config
      - name: data
        emptyDir: {}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlogapp
        hostPath:
          path: /var/log/app
      - name: varlogperformance
        hostPath:
          path: /var/log/performance
      - name: varlogsecurity
        hostPath:
          path: /var/log/security
      - name: varlogaudit
        hostPath:
          path: /var/log/audit
      - name: varlogfilebeat
        hostPath:
          path: /var/log/filebeat
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: logging
  labels:
    app: filebeat

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    app: filebeat
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - pods
  - services
  - endpoints
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - replicasets
  - deployments
  - daemonsets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  labels:
    app: filebeat
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: logging
