# ============================================================================
# BAIS Platform - Prometheus Configuration
# Best practices: Clear Monitoring Setup, Comprehensive Metrics
# ============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'bais-production'
        environment: 'production'
    
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
        scheme: http
        timeout: 10s
        api_version: v2
    
    rule_files:
      - /etc/prometheus/rules/*.yml
    
    scrape_configs:
    # BAIS API Application
    - job_name: 'bais-api'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - bais-production
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        action: keep
        regex: bais-api
      - source_labels: [__meta_kubernetes_pod_ip]
        target_label: __address__
        replacement: $1:9090
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_node_name]
        target_label: node
      metrics_path: /metrics
      scrape_interval: 15s
      scrape_timeout: 10s
    
    # PostgreSQL Database
    - job_name: 'postgres'
      static_configs:
      - targets: ['postgres-exporter:9187']
      labels:
        service: 'postgres'
        environment: 'production'
      scrape_interval: 30s
      scrape_timeout: 10s
    
    # Redis Cache
    - job_name: 'redis'
      static_configs:
      - targets: ['redis-exporter:9121']
      labels:
        service: 'redis'
        environment: 'production'
      scrape_interval: 30s
      scrape_timeout: 10s
    
    # Node Exporter
    - job_name: 'node'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__address__]
        target_label: __address__
        replacement: $1:9100
      - source_labels: [__meta_kubernetes_node_name]
        target_label: node
      scrape_interval: 30s
      scrape_timeout: 10s
    
    # Kubernetes API Server
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
      scrape_interval: 30s
      scrape_timeout: 10s
    
    # Kubernetes Nodes
    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__address__]
        target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics
      scrape_interval: 30s
      scrape_timeout: 10s
    
    # Kubernetes Pods
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name
      scrape_interval: 30s
      scrape_timeout: 10s

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
  labels:
    app: prometheus
    component: alerting
data:
  bais-alerts.yml: |
    groups:
    - name: bais_performance
      interval: 30s
      rules:
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.2
        for: 5m
        labels:
          severity: warning
          service: bais-api
        annotations:
          summary: "High API response time detected"
          description: "95th percentile response time is {{ $value }}s for service {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/high-response-time"
      
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.01
        for: 5m
        labels:
          severity: critical
          service: bais-api
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/high-error-rate"
      
      - alert: HighConcurrentConnections
        expr: http_concurrent_connections > 1000
        for: 2m
        labels:
          severity: warning
          service: bais-api
        annotations:
          summary: "High concurrent connections"
          description: "{{ $value }} concurrent connections to service {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/high-concurrent-connections"
      
      - alert: LowThroughput
        expr: rate(http_requests_total[5m]) < 100
        for: 10m
        labels:
          severity: warning
          service: bais-api
        annotations:
          summary: "Low request throughput"
          description: "Request rate is {{ $value }} req/s for service {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/low-throughput"
    
    - name: bais_database
      interval: 30s
      rules:
      - alert: DatabaseConnectionPoolExhausted
        expr: database_connection_pool_usage > 0.9
        for: 3m
        labels:
          severity: critical
          service: postgres
        annotations:
          summary: "Database connection pool near exhaustion"
          description: "Connection pool usage at {{ $value | humanizePercentage }} for {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/database-pool-exhaustion"
      
      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_statements_mean_exec_time[5m]) > 1000
        for: 5m
        labels:
          severity: warning
          service: postgres
        annotations:
          summary: "Slow database queries detected"
          description: "Average query execution time is {{ $value }}ms for {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/slow-queries"
      
      - alert: DatabaseHighConnections
        expr: pg_stat_activity_count > 800
        for: 5m
        labels:
          severity: warning
          service: postgres
        annotations:
          summary: "High database connection count"
          description: "{{ $value }} active connections to {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/high-db-connections"
    
    - name: bais_cache
      interval: 30s
      rules:
      - alert: RedisMemoryHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.85
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis memory usage high"
          description: "Memory usage at {{ $value | humanizePercentage }} for {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/redis-memory-high"
      
      - alert: RedisLowHitRate
        expr: redis_keyspace_hits_total / (redis_keyspace_hits_total + redis_keyspace_misses_total) < 0.7
        for: 10m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis cache hit rate low"
          description: "Cache hit rate is {{ $value | humanizePercentage }} for {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/redis-low-hit-rate"
      
      - alert: RedisConnectionFailures
        expr: rate(redis_connected_clients[5m]) < 0
        for: 2m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis connection failures"
          description: "Connection failures detected for {{ $labels.service }}"
          runbook_url: "https://docs.bais.io/runbooks/redis-connection-failures"
    
    - name: bais_infrastructure
      interval: 30s
      rules:
      - alert: HighCPUUsage
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
          component: infrastructure
        annotations:
          summary: "High CPU usage on node"
          description: "CPU usage is {{ $value }}% on node {{ $labels.instance }}"
          runbook_url: "https://docs.bais.io/runbooks/high-cpu-usage"
      
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 10m
        labels:
          severity: warning
          component: infrastructure
        annotations:
          summary: "High memory usage on node"
          description: "Memory usage is {{ $value }}% on node {{ $labels.instance }}"
          runbook_url: "https://docs.bais.io/runbooks/high-memory-usage"
      
      - alert: DiskSpaceLow
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: critical
          component: infrastructure
        annotations:
          summary: "Disk space low on node"
          description: "Disk usage is {{ $value }}% on {{ $labels.instance }} filesystem {{ $labels.mountpoint }}"
          runbook_url: "https://docs.bais.io/runbooks/disk-space-low"
      
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 5m
        labels:
          severity: critical
          component: infrastructure
        annotations:
          summary: "Pod crash looping"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"
          runbook_url: "https://docs.bais.io/runbooks/pod-crash-looping"
      
      - alert: PodNotReady
        expr: kube_pod_status_phase{phase!="Running"} == 1
        for: 10m
        labels:
          severity: warning
          component: infrastructure
        annotations:
          summary: "Pod not ready"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is in {{ $labels.phase }} state"
          runbook_url: "https://docs.bais.io/runbooks/pod-not-ready"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  labels:
    app: grafana
    component: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true
      editable: true
      jsonData:
        timeInterval: "15s"
        queryTimeout: "60s"
        httpMethod: "POST"
    
    - name: Elasticsearch
      type: elasticsearch
      url: http://elasticsearch:9200
      access: proxy
      database: "bais-logs-*"
      jsonData:
        index: "bais-logs-*"
        timeField: "@timestamp"
        interval: "Daily"
        maxConcurrentShardRequests: 5

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
  labels:
    app: grafana
    component: monitoring
data:
  dashboard-provider.yaml: |
    apiVersion: 1
    providers:
    - name: 'bais-dashboards'
      orgId: 1
      folder: 'BAIS Platform'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      options:
        path: /etc/grafana/provisioning/dashboards
