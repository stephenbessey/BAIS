version: '3.8'

services:
  postgres-staging:
    image: postgres:15.4-alpine
    container_name: bais-postgres-staging
    environment:
      POSTGRES_DB: bais_staging
      POSTGRES_USER: bais_staging_user
      POSTGRES_PASSWORD: staging_password_123
      POSTGRES_MAX_CONNECTIONS: "200"
      POSTGRES_SHARED_BUFFERS: "256MB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "1GB"
    ports:
      - "5433:5432"
    volumes:
      - postgres_staging_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bais_staging_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bais-staging

  redis-staging:
    image: redis:7.2-alpine
    container_name: bais-redis-staging
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis_staging_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bais-staging

  bais-staging:
    build:
      context: .
      dockerfile: Dockerfile.staging
    container_name: bais-app-staging
    environment:
      - ENVIRONMENT=staging
      - DATABASE_URL=postgresql://bais_staging_user:staging_password_123@postgres-staging:5432/bais_staging
      - REDIS_URL=redis://redis-staging:6379
      - LOG_LEVEL=INFO
      - WORKERS=2
      - TIMEOUT=60
    ports:
      - "8001:8000"
      - "9091:9090"
    depends_on:
      postgres-staging:
        condition: service_healthy
      redis-staging:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bais-staging

volumes:
  postgres_staging_data:
  redis_staging_data:

networks:
  bais-staging:
    driver: bridge
